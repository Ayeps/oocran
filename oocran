#!/usr/bin/env bash


function dependencies {
    cd install
    ./dependencies.sh
    exit
}

function server {
    #Make sure only root can run our script
    #if [ "$(id -u)" != "0" ]; then
    #   echo "This script must be run as root" 1>&2
    #   exit 1
    #fi

    echo "Install OOCRAN server!"
    echo ""
    #Install dependecies
    pip install -r requirements.txt
    influx  -execute "CREATE USER admin WITH PASSWORD 'admin' WITH ALL PRIVILEGES"
    #sudo rabbitmqctl set_permissions -p oocran oocran ".*" ".*" ".*"
    vagrant plugin install vagrant-openstack-provider
    vagrant plugin install vagrant-libvirt
    vagrant plugin install vagrant-vbguest
    #sudo rabbitmqctl add_user oocran oocran
    #sudo rabbitmqctl add_vhost oocran
    #Change secret key
    python install/key.py
    cd srs
    #Create database
    python manage.py makemigrations
    python manage.py migrate
    #Create admin User
    CODE=""
    while read line
    do
        CODE="$CODE$line;"
    done < ../install/create_admin.py
    echo "$CODE" | python manage.py shell &> /dev/null
    echo ""
    echo "Installation Finished!!"
    echo "Write oocran start IP:PORT to start server."
    exit
}

function install {
    if [ -z $PARAM ];
      then
        echo "No argument supplied"
        echo "Please introduce service"
        echo "ex: ./oocran install server"
        echo "ex: ./oocran install dependencies"
        exit
    else
        if [ "$PARAM" == "server" ]
          then
            server
        elif [ "$PARAM" == "dependencies" ]
          then
            dependencies
        fi
    fi
}

function start {
    echo "Starting OOCRAN server ;)"
    cd srs/
    if [ -z $PARAM ];
      then
        echo "No argument supplied"
        echo "Please introduce IP:Port"
        exit
    else
        if [ "$OPTION" == "test" ]
          then
             echo "username: admin"
             echo "password: admin"
             echo ""
             celery -A oocran worker -l info
             python manage.py runserver $PARAM
        else
            gnome-terminal -e "bash -c 'celery -A oocran worker -l info;exec $SHELL'"
            gnome-terminal -e "bash -c 'celery -A oocran beat -l info -S django;exec $SHELL'"
            gnome-terminal -e "bash -c 'influxd;exec $SHELL'"
            echo "username: admin"
            echo "password: admin"
            python manage.py runserver $PARAM
        fi
    fi
}


if [ -z "$1" ];
    then
        echo "Command not found!"
        echo "./oocran [command] [parameters]"
        exit
else

    OPTION=$1
    PARAM=$2
    OPTION=$3

    case "$1" in
       install) install
          ;;
       start) start
          ;;
       *) echo "Order Not Found"
          ;;
    esac
fi

